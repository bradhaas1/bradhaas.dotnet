File Name	Name	Type	Page	Modification Date	Comment
html5_and_javascript_web_apps.pdf	brad	Highlight	9	5/11/2014 10:55:02 PM 	"A few core W3C specifications are considered the cornerstones of today’s “enterprise”\rweb apps: Web Storage, Web Workers, Geolocation, Device Orientation, and Web Sockets."
html5_and_javascript_web_apps.pdf	brad	Highlight	10	4/25/2014 1:12:28 AM 	"Chapter 1 and Chapter 2 start with an overview of the Mobile Web and will help you\rget a good grasp on which browsers support the standards that this book talks about\rand which browsers you should support. Here you’ll learn on how to grade browsers so\rthat your development team, QA team, and customers will know where you stand on\rbrowser support."
html5_and_javascript_web_apps.pdf	brad	Highlight	16	4/25/2014 1:13:52 AM 	"One other small fact that’s pushing the browser as a platform is that multiple companies\r—Google, Apple, Mozilla, and Microsoft—are pushing thousands of commits per week\rinto improving their hybrid, thick-client technology platforms."
html5_and_javascript_web_apps.pdf	brad	Highlight	18	4/25/2014 1:53:29 AM 	The technology that drives our UI is changing as browsers become more\rmobile and as they’re given more hardware access through JavaScript APIs.
html5_and_javascript_web_apps.pdf	brad	Highlight	18	4/10/2014 9:01:58 PM 	"We are\rnow getting objects and data back from intermittent RESTful or WebSocket connections,\rwhich are automatically bound to the UI through a client-side, JavaScript framework."
html5_and_javascript_web_apps.pdf	brad	Highlight	18	4/10/2014 9:02:09 PM 	"which are automatically bound to the UI through a client-side, JavaScript framework.\rOur applications now have the ability to occasionally sync data and the power to function\roffline."
html5_and_javascript_web_apps.pdf	brad	Highlight	18	4/25/2014 1:54:01 AM 	"JavaScript libraries like jQuery\rand prototype must not define our frontend development models. Cross-browser DOM\rmanipulation libraries should be taken very seriously, but the complexities of a scalable\rclient-side architecture deserve much more attention than they have been given in the\rpast."
html5_and_javascript_web_apps.pdf	brad	Highlight	18	4/25/2014 2:01:33 AM 	"past. Organizing code and your application structure with mature techniques gathered\rfrom the classic Design Patterns: Elements of Reusable Object-Oriented Software by Erich\rGamma, et al., (Addison-Wesley Professional, 1995), is just the beginning. More than\r40 MVC JavaScript frameworks now claim to be MVC, but they should be called MV*.\rThey all use different techniques for managing models, views, and controllers, and many\rseriously depart from the original Smalltalk MVC concepts. And even though JavaScript\rframeworks give us a nice way to organize and structure our code, we must deal with\rbrowser APIs that expose hardware-level access, such as Geolocation or Web Workers,\ron our own. The architecture of heavy, HTML5-driven user interfaces is still in its infancy,\rbut fortunately you have this book to help light your path."
html5_and_javascript_web_apps.pdf	brad	Highlight	18	4/25/2014 2:03:09 AM 	"Our frontend code is now packaged in native\rapps, extensions, and operating systems that are all driven by HTML5. As we are seeing\rwith Google’s Chrome OS and Mozilla’s Boot 2 Gecko projects, the Open Web is very\rclearly being considered the platform for which web applications should and will be\rwritten."
html5_and_javascript_web_apps.pdf	brad	Highlight	21	4/25/2014 2:06:08 AM 	"Even in large enterprise environments, mobile browser statistics are on the rise and\rstarting to align with their desktop cousins. We are still faced, however, with the fact\rthat one third of the Internet is using a version of Internet Explorer older than 9."
html5_and_javascript_web_apps.pdf	brad	Highlight	22	4/25/2014 2:08:42 AM 	"• Developing sites for constrained devices and resolutions will force you to create\rmore fluid and flexible content.\r• Device features, such as accelerometer and geolocation hardware, present new\rbusiness opportunities with technologies like Augmented Reality.\r• Overall, mobile first requires you to think in a code-quality mindset. Today, it’s\rrequired for developers to worry about things like battery life when doing hardwareaccelerated\ranimations with CSS. This quality of development not only brings better\rperforming apps, but it also encourages you to focus on cleaner semantics.\r• As you wean yourself off of desktop-focused web development, mobile browsers\rgive you a glimpse into the future. This allows you"
html5_and_javascript_web_apps.pdf	brad	Highlight	23	4/25/2014 2:09:40 AM 	"Now, the Mobile Web adds\ranother dimension of support to the apps we build, and the fragmentation across\rbrowsers and devices is mind-blowing. We must now create applications to be compatible\racross browsers, platforms, and devices."
html5_and_javascript_web_apps.pdf	brad	Highlight	23	4/25/2014 2:09:59 AM 	"You’re not only supporting browsers, but the operating system the browser is tied\rto as well."
html5_and_javascript_web_apps.pdf	brad	Highlight	23	4/10/2014 9:07:23 PM 	You can find the latest matrix of HTML5 support across all rendering\rengines on the HTML5 engine comparison page on Wikipedia.
html5_and_javascript_web_apps.pdf	brad	Highlight	23	4/25/2014 2:12:25 AM 	"WebKit is the browser engine behind Mobile Safari, Android, and Chrome, to name a\rfew."
html5_and_javascript_web_apps.pdf	brad	Highlight	24	4/25/2014 2:13:54 AM 	"Android. Even though the Android default browser is based on WebKit, as of this writing,\rits implementation of HTML5 specifications is just starting to beef up in version 4.\rAs Android evolves, we can rest assured that the coming HTML5 implementations will\revolve with its community (http://source.android.com/community). For now, however,\rAndroid devices are horribly fragmented, and HTML5 support varies on devices and\rOS versions."
html5_and_javascript_web_apps.pdf	brad	Highlight	25	4/25/2014 2:15:13 AM 	"Mobile Firefox\rMozilla has been around for a while and is stronger than ever in focusing on community\refforts and pushing the Web forward. As of this writing, Mobile Firefox is in third place\rfor the best HTML5 implementation (Figure 2-3) and has trumped Mobile Safari (iOS)\rin terms of implemented HTML5 features."
html5_and_javascript_web_apps.pdf	brad	Highlight	27	4/25/2014 2:16:11 AM 	"Opera (http://www.opera.com/mobile) has two separate browsers for mobile phones:\rOpera Mobile and Opera Mini. In Opera Mini, the Opera Presto browser engine is\rlocated on a server. In Opera Mobile, it is installed on the phone. Currently, Opera Mini\rholds a large percentage of market share among other browsers, but for enterprise\rHTML5 applications, Opera Mobile supports the core specifications we need, such as\rWeb Storage, Web Workers, and Geolocation."
html5_and_javascript_web_apps.pdf	brad	Highlight	27	4/25/2014 2:16:34 AM 	"Internet Explorer Mobile\rWindows Phone 7.5 features a version of Internet Explorer Mobile with a rendering\rengine that is based on Internet Explorer 9. So the simplest way of explaining what\rWindows Phone supports is to say that it supports what IE9 supports, including Web\rStorage and Geo location. The supported specifications for IE9 Mobile can be found at\rhttp://windowsteamblog.com/windows_phone/b/wpdev/archive/2011/09/22/ie9-mobiledeveloper-\roverview.aspx.\rOn a better note, Windows Phone 8 supports IE10. Internet Explorer 10 includes much\rbetter support for such HTML5 features as WebSockets, Web Workers, Application\rCache, and IndexedDB."
html5_and_javascript_web_apps.pdf	brad	Highlight	27	4/10/2014 9:10:00 PM 	You can check the latest browser statistics at http://www.netmarket\rshare.com/browser-market-share.aspx?qprid=0&qpcustomd=1.
html5_and_javascript_web_apps.pdf	brad	Highlight	28	4/25/2014 2:20:34 AM 	Browser Grading\rAll of this information leads into the important topic of browser grading. Browser grading\ris a must for any mobile web project. It gives developers and QA a way to keep sane\rwhile developing and testing your application. It also sets forth a specific support schedule\rfor your users and an overall target for your mobile web app’s capabilities. Table 2-1\rillustrates a sample browser grading sheet from QuirksMode.
html5_and_javascript_web_apps.pdf	brad	Highlight	29	4/10/2014 9:11:01 PM 	"With a clearer picture of the mobile device and browser landscape, you next need to\rdetermine which W3C specifications the various browsers support and how you can\ruse them today. In terms of enterprise development, certain client-side APIs are considered\rthe advanced building blocks of today’s mobile web applications: Geolocation,\rWebSocket, Web Storage, Device Orientation, and Web Workers."
html5_and_javascript_web_apps.pdf	brad	Highlight	29	4/25/2014 2:21:51 AM 	"Table 2-2 details the support of the building-block APIs in the five leading or upcoming\rmobile platforms. All of these mobile browsers are considered grade A, B, or C.\rThroughout the book and at http://html5e.org, I will refer to this group of specifications\rand browsers as HTML5 Enterprise or HTML5e to easily identify and build upon the\rsame specifications and browsers across mobile and desktop environments."
html5_and_javascript_web_apps.pdf	brad	Highlight	29	4/10/2014 9:12:08 PM 	"For the latest browser HTML5 support information, check out http://\rcaniuse.com and http://mobilehtml5.org."
html5_and_javascript_web_apps.pdf	brad	Highlight	30	4/25/2014 2:26:26 AM 	"So you’ve decided which browsers you’re going to support (all of them hopefully), but\rnow you must polyfill or gracefully degrade, your apps where certain HTML5e specifications\rare not implemented. The premise for graceful degradation is to first build for\rthe latest and greatest, then add polyfills, or handlers, for less capable devices."
html5_and_javascript_web_apps.pdf	brad	Highlight	30	4/25/2014 2:26:47 AM 	You now have a starting point: a decent view of which HTML5 APIs are supported within\rmobile device browsers.
html5_and_javascript_web_apps.pdf	brad	Highlight	33	4/25/2014 2:32:37 AM 	"The success of any mobile web application relies on two factors: design and performance.\rFor mobile app design, we must have a consistent look and feel across all platforms. For\rbetter performance, we must have offline capabilities, animations on the UI, and backend\rservices that retrieve and send data via RESTful or WebSocket endpoints. To put it\rsimply, your app is constrained by two ever-changing speeds: the speed of the device\rCPU/GPU and the speed of the Internet. The UI is handled by device hardware, such\ras the GPU, when doing native-like animations and transitions through CSS, and your\rbackend services are limited to the current Internet connection speed of the mobile\rdevice."
html5_and_javascript_web_apps.pdf	brad	Highlight	33	4/25/2014 2:33:22 AM 	"The “native versus Mobile Web” debate isn’t about which programming model will win.\rIt’s about what we can build until HTML5-like technologies catch up. We have three\rchoices:\r• Pure native approaches, which are clearly winning today in terms of overall application\rresponsiveness"
html5_and_javascript_web_apps.pdf	brad	Highlight	34	4/25/2014 2:33:40 AM 	"• Hybrid approaches and frameworks, which try to bridge the gap of HTML5 and\rnative\r• True, bleeding edge, mobile web frameworks, which are trying to conquer the native\rfeel with markup, JavaScript, and CSS"
html5_and_javascript_web_apps.pdf	brad	Highlight	34	4/10/2014 9:17:15 PM 	"The Look\rTo truly achieve that native look and feel, not only does your app need to respond quickly,\rbut it must also look good. These days, the big secret to getting your native app listed\rin an App Store Top 10 list is to have a good-looking design. That’s all it takes. If you\rhave a killer data-driven application using all the latest device bells and whistles, it will\rnot make it very far without a good clean design.\rOverall, the Web has its own look and feel, and everyone knows that. There isn’t a default\rlook that will make all your users happy, however, so the burden is on you and your\rdesign team to create an attractive user experience.\riOS definitely has its own Mobile Web look and feel that mimics its native apps, but\rwhat about Android, Windows Mobile, Kindle, and all the other devices? Even if you\rcould get your web app to respond like a native application, how do you conquer making\rit look like one? Because you are most concerned with only the three or four leading\rplatforms, you could create three native skins for your target platforms and a default\rweb look and feel for all the others.\rTheresa Neil does a great job of explaining UI patterns for native apps in Mobile Design\rPattern Gallery (O’Reilly). Her website, (shown in Figure 3-1), is a great resource for\rtrending patterns in mobile design."
html5_and_javascript_web_apps.pdf	brad	Highlight	35	4/25/2014 2:44:33 AM 	"Hardware acceleration\rNormally, GPUs handle detailed 3D modeling or CAD diagrams, but for mobile web\rapps, we want our primitive drawings (divs, backgrounds, text with drop shadows,\rimages, etc.) to appear smooth and animate smoothly via the GPU. The unfortunate\rthing is that most frontend developers are dishing this animation process off to a thirdparty\rframework without being concerned about the semantics, but should these core\rCSS3 features be masked? Consider a few reasons why caring about hardware acceleration\ris important:"
html5_and_javascript_web_apps.pdf	brad	Highlight	36	4/25/2014 2:45:03 AM 	"Memory allocation and computational burden\rIf you go around compositing every element in the DOM just for the sake of hardware\racceleration, the next person who works on your code may chase you down\rand beat you severely.\rPower consumption and battery life\rObviously, when hardware kicks in, so does the battery. Developers are forced to\rtake the wide array of device constraints into consideration while writing mobile\rweb apps. This will be even more prevalent as browser makers start to enable access\rto more and more device hardware. Luckily, we will soon have an API for checking\rthe status of the device battery.\rConflicts\rYou will encounter glitchy behavior when applying hardware acceleration to parts\rof the page that were already accelerated. So knowing if you have overlapping acceleration\ris very important."
html5_and_javascript_web_apps.pdf	brad	Highlight	36	4/25/2014 2:46:36 AM 	"Ideally, you want the mobile device CPU to set up the initial\ranimation, and then have the GPU responsible for only compositing different layers\rduring the animation process."
html5_and_javascript_web_apps.pdf	brad	Highlight	36	4/25/2014 2:46:48 AM 	"This is what translate3d, scale3d, and translateZ do:\rthey give the animated elements their own layer, thus allowing the device to render\reverything together smoothly."
html5_and_javascript_web_apps.pdf	brad	Highlight	36	4/25/2014 2:47:16 AM 	"CSS features can come at a cost on low-end devices. When using CSS gradient, boxshadow,\rborders, and background-repeat , you are using the device GPU to paint your\rimages on the fly. CSS can be very powerful for rendering a nice user interface, but you\rshould avoid doing this type of work in software when it can be prebaked in images.\rThis means you should use sprites so the device downloads only a single image and\rembed data URIs in your CSS files for smaller images."
html5_and_javascript_web_apps.pdf	brad	Highlight	36	4/25/2014 2:47:34 AM 	CSS selector performance can cripple older mobile browsers. Using selectors like:\rdiv[style*='foo']\rwill severely reduce performance on iOS devices up to version 4.3.x.
html5_and_javascript_web_apps.pdf	brad	Highlight	37	4/25/2014 2:47:55 AM 	"Interactions and Transitions\rTake a look at three of the most common user-interaction approaches when developing\ra mobile web app: slide, flip, and rotation effects. First, we’ll dissect the slide, flip, and\rrotation transitions and how they’re accelerated. Notice how each animation requires\ronly three or four lines of CSS and JavaScript. The examples don’t use any additional\rframeworks, only DOM and vendor prefixed APIs."
html5_and_javascript_web_apps.pdf	brad	Highlight	109	5/9/2014 11:26:10 PM 	"WebSockets give you minimal overhead and a much more efficient way of delivering\rdata to the client and server with full duplex communication through a single socket.\rThe WebSocket connection is made after a small HTTP handshake occurs between the\rclient and the server, over the same underlying TCP/IP connection. This gives you an\ropen connection between the client and the server, and both parties can start sending\rdata at any time.\rA few of WebSockets’ many advantages are:\r• No HTTP headers\r• No lag due to keep-alive issues\r• Low latency, better throughput and responsiveness\r• Easier on mobile device batteries"
html5_and_javascript_web_apps.pdf	brad	Highlight	109	5/9/2014 11:29:45 PM 	"Building the Stack\rTo effectively develop any application with WebSockets, you must accept the idea of the\r“real-time Web” in which the client-side code of your web application communicates\rcontinuously with a corresponding real-time server during every user connection. To"
html5_and_javascript_web_apps.pdf	brad	Highlight	110	5/9/2014 11:29:54 PM 	"accomplish this, you can use a capable protocol such as WebSockets or SPDY to build\rthe stack yourself. Or you can choose a service or project to manage the connections\rand graceful degradation for you. In this chapter, you’ll learn how to implement a raw\rWebSocket server and the best practices surrounding the details of setting one up."