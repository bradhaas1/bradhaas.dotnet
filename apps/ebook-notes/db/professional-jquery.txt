File Name	Name	Type	Page	Modification Date	Comment
professional_jquery.pdf	brad	Highlight	53	6/1/2014 2:06:27 AM 	"One especially important variation on the anonymous function is the “immediately-invoked\rfunction expression” (IIFE) or “Self-executing anonymous function.” Why two names? Read Ben\rAlman’s blog post for a well-thought out discussion of the name for this very common pattern:\rhttp://benalman.com/news/2010/11/immediately-invoked-function-expression/.\rWhatever you decide to call it, this pattern is defi ned as a function expression wrapped in\rparentheses, and then immediately invoked. The simple trick of wrapping the function expression\rin parentheses forces the JavaScript engine to recognize the function(){} block as a function\rexpression and not the beginning of a function statement. The following code sample illustrates this\rpattern with a simple example that accepts two values and simply adds them together."
professional_jquery.pdf	brad	Highlight	54	6/1/2014 1:32:08 AM 	"UNDERSTANDING EXECUTION CONTEXT\rExecution context is the object within which your code is executing. Access to context occurs through\rthe this keyword, which refers to the object it resides within. In the current version of the language,\rif your code doesn’t reside in a custom object or function, it will then belong to the global context.\rAs a note, in future versions of the language, including “strict mode” a special subset of the\rlanguage defi ned the 5th edition of the JavaScript standard available in a small subset of browsers,\rfunctions defi ned without specifi c context are bound to undefined as their this value."
professional_jquery.pdf	brad	Highlight	54	6/1/2014 1:31:32 AM 	"When execution of a function or method begins, JavaScript creates a new execution context and\renters into that function’s execution context. When a function finishes executing and returns,\rcontrol is relinquished back to the original execution context, and the current context is set up for\rgarbage collection except in the case of a closure where the context persists."
professional_jquery.pdf	brad	Highlight	54	5/22/2014 8:18:13 PM 	"A nested function has access to its outer function’s variables, except for this and arguments. The\rmechanism through which a nested function continues to keep the references of its outer function\reven after the outer function fi nishes execution is called closure. Closures also help to reduce\rnamespace pollution."
professional_jquery.pdf	brad	Highlight	63	6/1/2014 1:36:36 AM 	"The jQuery core function, sometimes also referred to as a factory object, is referenced as either\rjQuery() or, more commonly, by its alias $(). If you recall from the JavaScript primer, this"
professional_jquery.pdf	brad	Highlight	64	6/1/2014 1:36:23 AM 	"is a completely valid name for a variable. In this case, the variable has the type of “function.” This\rfunction accepts either a selector string, a string of raw HTML, a DOM element, an existing jQuery\robject, or no argument at all. The function returns a jQuery object which also has several methods\rattached to it, for example, $.ajax() or $.each(). More on these later."
professional_jquery.pdf	brad	Highlight	64	5/22/2014 8:54:03 PM 	"When using the jQuery object to either select elements or create new elements, it returns what’s known\ras a wrapper object. It’s called a wrapper object because you “wrap” jQuery functionality around a\rcollection of DOM elements. A wrapper object is array-like, meaning you can index it with square\rbrackets or check the number of elements using its .length property. I’ll use the .length property\roften to verify that a selector matched a set of elements. It’s easy to check out the .length property of\ra jQuery wrapper using the Firebug console."
professional_jquery.pdf	brad	Highlight	65	5/22/2014 8:55:22 PM 	"When you call a jQuery method, such as .addClass(), it applies the method to all of the selected\relements. There’s no need to iterate over the collection with a loop."
professional_jquery.pdf	brad	Highlight	66	6/1/2014 2:20:33 AM 	"The .isEmptyObject() method is used to test whether an object contains any properties, including\rinherited properties, independent of object type:\r<span class='code'>$.isEmptyObject(“”); // returns true\r$.isEmptyObject({}); // returns true\rvar mailman = {};\rmailman.letters = 100;\r$.isEmptyObject(mailman); // returns false</span>"
professional_jquery.pdf	brad	Highlight	66	5/22/2014 8:57:24 PM 	"There’s a similar .isPlainObject() method. It also tests whether an object contains any\rproperties, but must be of an Object instance. So an empty string will return false in this case:"
professional_jquery.pdf	brad	Highlight	66	6/1/2014 12:13:04 AM 	"You can also\rmerge two or more objects with the .extend() method. More specifi cally, .extend() combines\rthe properties of one or more objects into a target object. In the next example, obj1 receives the\rproperties of obj2 and obj3:"
professional_jquery.pdf	brad	Highlight	67	5/22/2014 9:04:34 PM 	"Array Operations\rSimilar to .isObject() and .isFunction(), you also have an .isArray() at your disposal. Besides\rchecking whether an object is an array, you can turn an array-like object to a true array using\r.makeArray(). By converting an array-like object to an array, you lose its methods and properties.\rThe following illustrates a simple usage of makeArray which converts a cloned version of jQuery\rinto a standard Array."
professional_jquery.pdf	brad	Highlight	67	5/22/2014 9:09:44 PM 	"jQuery also provides an additional convenience method for combining arrays called .merge(),\rwhich takes the elements from a second array and appends them to the elements of a fi rst array,\rpreserving the order of the elements of the two arrays:"
professional_jquery.pdf	brad	Highlight	67	5/22/2014 9:10:09 PM 	"The next two methods are useful for working with the elements of an array. .inArray() checks\rfor the existence of a value (in the array no less) and returns the index of the value if found. If the\rvalue isn’t in the array, -1 is returned. The $.unique() removes duplicate elements from an array of\rDOM elements. This following snippet demonstrates both methods:"
professional_jquery.pdf	brad	Highlight	68	5/22/2014 9:11:51 PM 	"Using a jQuery tag selector, you get all of the paragraph elements, then using .makeArray() you\rconvert to a plain-old JavaScript array. You then use a jQuery class selector to get all elements of\rclass “duplicate” and add them into our original paragraphs array. With that action, paragraphs\rnow contain duplicate elements. Its total length is 10. Then using .unique() you get the set of\rparagraph elements without the duplicates. Its total length is now 7. Finally, you check for “6” in\rthe list of paragraphs, which of course returns -1.\rYou can iterate through an array using an old-fashioned for loop, but as you’ve probably predicted,\rjQuery has an alternate method called .each(). This will work with objects, array-like objects,\rand arrays. $.each() is zero-based and accepts two arguments: the collection to iterate over and\ra callback function. The callback function accepts the arguments: the index currently operated\ron and the element value. The following code illustrates using $.each() to iterate over the members\rof a simple array:"
professional_jquery.pdf	brad	Highlight	69	5/22/2014 10:24:20 PM 	"The last jQuery utility method for working with arrays you’ll check out is .map(), which has\ra similar syntax to .each(), accepting an array or array-like object as its fi rst argument and a\rcallback function. The callback function — according to the jQuery docs, is a “. . . function to\rprocess each item against” — accepts one of the array elements and its current index."
professional_jquery.pdf	brad	Highlight	69	5/22/2014 10:26:11 PM 	"Data Structures\rA queue is a “First In, First Out” data structure, meaning elements are added to the back and\rremoved from the front. In jQuery, you can use $.queue() to maintain a list of functions. The"
professional_jquery.pdf	brad	Highlight	70	5/22/2014 10:28:29 PM 	"default function queue is fx, the standard effects queue. In the fx context the power of queues is\rvery clear. The following code sample illustrates a simplifi ed animation queue. Our animation div\rslides up and then, when it’s fi nished, the next animation in the queue, the fadeIn, runs.\r$(‘#animation’).slideUp().fadeIn();\rThe $.queue supports the operations push and pop. To remove all functions from a queue, use\r.clearQueue(). Using the corresponding method .dequeue() you can remove an item from a\rqueue and execute it. The following code sample shows a simplifi ed example of a manual usage\rqueue and dequeue. A second animation is added to the queue, and then is pulled off the stack and\rexecuted with dequeue."
professional_jquery.pdf	brad	Highlight	71	5/22/2014 10:23:42 PM 	"Data\rAjax is a major part of the modern Web. The ability to wire data from client to server and\rback again, without a full page refresh, has resulted in a serious usability boon for modern web\rapplications. Two of the most common data exchange formats are XML and JSON (JavaScript\rObject Notation). jQuery has the ability to parse both formats locally and over a URL with the\r.parseXML() and .parseJSON() methods. You learn about those later when you explore Ajax.\rArbitrary data can be attached to HTML element storage/retrieval. The utility method .data() is\rused for this purpose. .data() will be covered in detail in Chapter 6."
professional_jquery.pdf	brad	Highlight	71	5/22/2014 10:23:24 PM 	"Other Useful Utility Methods\rThese last few utility methods don’t fi t into any of the other categories: .contains(), .isWindow(),\r.isXMLDoc(), .now(), .support(), and .globalEval(). This section tackles each one.\rChecking for Subnodes\rThe method .contains() checks to see if a DOM node is a child, or subnode, of another node. It\rexpects two arguments — the possible container and the contained node:"
professional_jquery.pdf	brad	Highlight	71	5/22/2014 10:23:12 PM 	Checking for Windows\rConsider the situation were you have an iframe. In one of your operations you may want to distinguish\rbetween that iframe and the browser window. To do this use the .isWindow() method:
professional_jquery.pdf	brad	Highlight	72	5/22/2014 10:22:58 PM 	"Determining the Current Time\rFor checking the current time, use the $.now() shortcut, as its name implies. It’s a shortcut for (new\rDate).getTime(), and obviously it’s much easier to just write $.now().\rDetecting Browser Features\rYou’ve probably heard that it’s better to detect browser features rather than detect browsers. Using\rthe .support() method you can detect what features a browser supports. This function deprecates\r$.browser from earlier versions of jQuery. A good example of its use: if ($.support.ajax) { } to\rcheck if a browser supports Ajax requests (aka XMLHttpRequest object creation)."
professional_jquery.pdf	brad	Highlight	79	5/22/2014 10:48:37 PM 	"Using Cody Lindley’s terminology, any jQuery method that returns another wrapper object is\rdenoted as a “constructive” method because it can continue a chain, whereas any method that\rdoesn’t return a wrapper (like .text() or .html()) is denoted a “destructive” method."
professional_jquery.pdf	brad	Highlight	82	5/22/2014 10:56:31 PM 	"To do so, use the\r$.noConflict(); method after loading the libraries that may confl ict."
professional_jquery.pdf	brad	Highlight	90	5/22/2014 11:12:59 PM 	"But, there are also attribute selectors reminiscent of regexes, so you can match using part of a string\ras well; for example, the attribute starts and ends selectors. The attribute starts selector\rselects all elements that begin with a specifi ed string. Likewise, the attribute ends selector selects\rall those elements that end with a particular string:\r$(“[attributeName^=’value’]”); // attribute starts\r$(“[attributeName $=’value’]”); // attribute ends"
professional_jquery.pdf	brad	Highlight	94	5/22/2014 11:20:38 PM 	"Using Filter Selectors\rNotice that the previous set of selectors all begin with a colon (:). This class of selectors is known\ras fi lters, because they fi lter a base selector."
professional_jquery.pdf	brad	Highlight	97	5/22/2014 11:22:21 PM 	"Filtering by Visibility\rjQuery determines whether an element is visible depending on the properties offsetWidth and\roffsetHeight of an element. If both are zero, the element is considered hidden. If an element’s"
professional_jquery.pdf	brad	Highlight	98	5/22/2014 11:22:36 PM 	"visibility is toggled directly changing its styling from display:block; to display:none; jQuery\rwill detect those as visible/invisible, respectively. Use the :hidden and :visible fi lters to match\reach type. The next example demonstrates usage of the visible and hidden fi lters."
professional_jquery.pdf	brad	Highlight	98	5/22/2014 11:23:03 PM 	"Filtering by Content\rSometimes you may want to select according to what an element does (or doesn’t) contain; for\rexample, some text. Using the :contains() fi lter you can select an element that contains a matching\rtext directly inside the element, inside of a descendant, or even a combination of both. The following\rcode sample illustrates a use of contains. It selects all paragraphs that contain the text string “jenny”\rand stores them in a variable jennies."