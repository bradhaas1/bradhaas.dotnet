File Name	Name	Type	Page	Modification Date	Comment
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	8	6/26/2014 5:07:58 PM 	"configurable\rWhen this attribute is set to true, the affected property can be deleted from the parent object, and the property’s \rdescriptor can be modified later. When set to false, the property’s descriptor is sealed from further modifications."
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	8	6/26/2014 5:13:17 PM 	"<div class=""code"">\r//A car can have any number of doors\rObject.defineProperty(car, 'doors', {\r    configurable: true,\r    value: 4\r});\r \r// A car must have only four wheels\rObject.defineProperty(car, 'wheels', {    configurable: false,\r    value: 4\r});</div>"
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	8	6/26/2014 5:10:35 PM 	"<div class=""code"">var car = {};\r// A car can have any number of doors\rconfigurable: true,\rvalue: 4\r});\r// A car must have only four wheels\rObject.defineProperty(car, 'wheels', {\rconfigurable: false,\rvalue: 4\r});</div>"
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	9	6/26/2014 5:14:38 PM 	Wheels becomes fixed while doors remains malleable. A programmer \rmight want to revoke the configurable attribute of a property as a form of defensive programming to prevent an \robject from being modified much like built-in objects of the language do.
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	9	6/26/2014 5:08:27 PM 	"enumerable\rEnumerable properties appear if an object’s properties are iterated over using code. When set to false, thoseproperties cannot be iterated over."
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	10	6/26/2014 5:16:35 PM 	"writable\rWhen true, the value associated with the property can be changed; otherwise, the value remains constant."
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	10	6/26/2014 5:16:49 PM 	"Inspecting Objects\rIn the last section, you learned how to define your own properties on objects you create. Just as in life, it’s helpful to \rknow how to read and write, so in this section you’ll learn how to dig through the underbrush of objects in JavaScript. \rWhat follows is a list of functions and properties worth knowing when it comes to inspecting objects."
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	10	6/26/2014 9:25:19 PM 	"Object.getOwnPropertyDescriptor\rIn the last section, you saw the various ways to set the attributes of a property. Object.getOwnPropertyDescriptor \rgives you a detailed description of those settings for any property of an object:\r<span class='code'>\rvar o = {foo : 'bar'};<br />\r// Object {value: ""bar"", writable: true, enumerable: true, configurable: true}<br />\rObject.getOwnPropertyDescriptor(o,'foo');</span>"
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	11	6/26/2014 5:19:56 PM 	"Object.getOwnPropertyNames\rThis method returns all the property names of an object, even the ones that cannot be enumerated:\r<div class=""code"">\rvar box = Object.create({}, {\ropenLid: {\rvalue: function () {\rreturn ""nothing"";\r},\renumerable: true\r},\ropenSecretCompartment: {\rvalue: function () {\rreturn 'treasure';\r},\renumerable: false\r}\r});\r// => [""openLid"", ""openSecretCompartment""]\rconsole.log(Object.getOwnPropertyNames(box).sort());\r</div>"
ApressExpertJavaScript.pdf	iAnnotate User	Highlight	11	6/26/2014 5:20:49 PM 	"Object.getPrototypeOf\rThis method is used to return the prototype of a particular object. In lieu of this method, it may be possible to use \rthe __proto__ method, which many interpreters implemented as a means of getting access to the object’s prototype. \rHowever, __proto__ was always considered somewhat of a hack, and the JavaScript community used it mainly as \ra stopgap. It is worth noting, however, that even if Object.getPrototypeOf gives you access to the prototype of an \robject, the only way to set the prototype of an object instance is by using the __proto__ property."